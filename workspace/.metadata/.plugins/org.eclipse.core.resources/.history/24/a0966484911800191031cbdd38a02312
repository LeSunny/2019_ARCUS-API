package com.jam2in.restapi.Service;

import java.io.IOException;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

import javax.annotation.Resource;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.jam2in.restapi.DAO.ApiDAO;

public class ApiServiceImpl {

	@Resource(name="apiDAO")
	private ApiDAO apiDAO;
	
	void set(String key, int expireTime, String value) {
		Future<Boolean> future = null;
		boolean result = false;
		
		future = apiDAO.set(String key, int expireTime, String value);
		
		try {
			result = future.get(700L, TimeUnit.MILLISECONDS);
		} catch (InterruptedException e) {
			e.printStackTrace();
		} catch (ExecutionException e) {
			e.printStackTrace();
		} catch (TimeoutException e) {
			e.printStackTrace();
		}
		
		System.out.println(result);
		
		String jsonString;
		
		if(result) {
			jsonString = "{\"result\":\"" + "SUCCESS\"}";
		}else {
			jsonString = "{\"result\":\"" + "FAILED\"}";
		}
		
		ObjectMapper mapper = new ObjectMapper();
		JsonNode returnJson = null;
		try {
			returnJson = mapper.readTree(jsonString);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return returnJson;
	}
	void add(String key, int expireTime, String value);
	void replace(String key, int expireTime, String value);
	void prepend(long cas, String key, Object value);
	void append(long cas, String key, Object value);
	void setBulk(List<String> key, int expireTime, Object value);
	void setBulk(Map<String, Object> map, int expireTime);
	void get(String key);
	void getBulk(Collection<String> key);
	void getAttr(String key);
	void increase(String key, int by);
	void increase(String key, int by, long def, int exp);
	void decrease(String key, int by);
	void decrease(String key, int by, long def, int exp);
	void delete(String key);
}
